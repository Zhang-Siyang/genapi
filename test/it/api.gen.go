// CODE GENERATED BY genapi. DO NOT EDIT.
package it

import (
	"context"
	"github.com/lexcao/genapi"
	"net/http"
	"net/url"
)

type implTestAPI struct {
	client genapi.HttpClient
}

// SetHttpClient implments genapi.Interface
func (i *implTestAPI) SetHttpClient(client genapi.HttpClient) {
	i.client = client
}

func (i *implTestAPI) GetEcho(id string, query string) (*genapi.Response, error) {
	resp, err := i.client.Do(&genapi.Request{
		Method:     "GET",
		Path:       "/echo/{id}",
		PathParams: map[string]string{"id": id},
		Queries:    url.Values{"query": []string{query}},
		Headers:    http.Header{"Echo-Header": []string{"echo-value"}},
	})
	return resp, err
}

func (i *implTestAPI) PostEcho(ctx context.Context, body RequestBody, query string) (*ResponseBody, error) {
	resp, err := i.client.Do(&genapi.Request{
		Method:  "Post",
		Path:    "/echo",
		Queries: url.Values{"query": []string{query}},
		Headers: http.Header{"Echo-Header": []string{"echo-value"}},
		Context: ctx,
		Body:    body,
	})
	return genapi.HandleResponse[*ResponseBody](resp, err)
}

func (i *implTestAPI) PostEchoError(statusCode string) error {
	resp, err := i.client.Do(&genapi.Request{
		Method:  "Post",
		Path:    "/echo/error",
		Queries: url.Values{"status_code": []string{statusCode}},
	})
	return genapi.HandleResponse0(resp, err)
}

func init() {
	genapi.Register[TestAPI, *implTestAPI](
		genapi.Config{Headers: http.Header{
			"Global-Header": []string{
				"global-value",
			},
		},
		},
	)
}
